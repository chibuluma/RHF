@page "/dashboard"
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient Http
@inject ISnackbar SnackbarService
@attribute [Authorize]

<MudGrid>
    <MudItem xs="12">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
            <MudText Typo="Typo.h5">RHF Dashboard</MudText>
        </MudPaper>
    </MudItem>
    <MudItem xs="3">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
            <MudStack>
                <MudText Align="Align.Center" Typo="Typo.caption">Total Benefactors</MudText>
                <MudText Align="Align.Center" Typo="Typo.h4">@metric.TotalBenefactors</MudText>
            </MudStack>
        </MudPaper>
    </MudItem>
    <MudItem xs="3">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
            <MudStack>
                <MudText Align="Align.Center" Typo="Typo.caption">Total RHF Contributions</MudText>
                <MudText Align="Align.Center" Typo="Typo.h4">K @metric.TotalContributions</MudText>
            </MudStack>
        </MudPaper>
    </MudItem>
    <MudItem xs="3">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
            <MudStack>
                <MudText Align="Align.Center" Typo="Typo.caption">My Total Contributions</MudText>
                <MudText Align="Align.Center" Typo="Typo.h4">K @metric.MyTotalContributions</MudText>
            </MudStack>
        </MudPaper>
    </MudItem>
    <MudItem xs="3">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
            <MudStack>
                <MudText Align="Align.Center" Typo="Typo.caption">Next Donation</MudText>
                <MudText Align="Align.Center" Typo="Typo.h4">@metric.NextProjectSchedule.ToString("MMM dd yyyy")</MudText>
            </MudStack>
        </MudPaper>
    </MudItem>
    <MudItem xs="6">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
            <MudStack>
                <MudChart ChartType="ChartType.Pie" InputData="@metric.ContributedVsRaised" @bind-SelectedIndex="Index" InputLabels="@labels" Width="300px" Height="300px" />
            </MudStack>
        </MudPaper>
    </MudItem>
    <MudItem xs="6">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
            <MudStack>
                <MudChart ChartType="ChartType.Bar" ChartSeries="@Series" @bind-SelectedIndex="Index" XAxisLabels="@XAxisLabels" Width="100%" Height="350px"></MudChart>
            </MudStack>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    private int Index = -1; //default value cannot be 0 -> first selectedindex is 0.
    int dataSize = 4;
    double[] data = { 77, 25 };
    string[] labels = { "Raised", "Distributed" };
    int total_benefactors = 0;
    double total_contributions_made = 0.0;
    double my_total_contibutions_made = 0.0;
    DateTime next_project_schedule = DateTime.Now;
    Random random = new Random();
    Metrics metric = new Metrics();
    void RandomizeData()
    {
        var new_data = new double[dataSize];
        for (int i = 0; i < new_data.Length; i++)
            new_data[i] = random.NextDouble() * 100;
        data = new_data;
        StateHasChanged();
    }
    private System.Security.Claims.ClaimsPrincipal User;
    protected async override Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        User = authState.User;

        metric = await Http.GetFromJsonAsync<Metrics>($"api/Metrics/GetMetrics/{User.Identity.Name}");
    }

    public List<ChartSeries> Series = new List<ChartSeries>()
    {
        new ChartSeries() { Name = "Contributions", Data = new double[] { 40, 20, 25, 27, 46, 60, 48, 80, 15 } },
    };
    public string[] XAxisLabels = { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" };
}