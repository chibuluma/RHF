@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@inject ISnackbar SnackbarService
@attribute [Authorize(Roles = "CFO")]

<style>
    .mud-table-cell-custom-group {
        font-weight: 500;
    }

    .mud-table-cell-custom-group-footer {
        padding-bottom: 50px;
        text-align: right;
    }
</style>


<MudDialog>
    <DialogContent>
        <MudTable Hover="true" Breakpoint="Breakpoint.Sm" Height="250px" FixedHeader="true"
            Items="@Contributions"
            GroupBy="@_groupDefinition"
            GroupHeaderStyle="background-color:var(--mud-palette-background-grey)"
            GroupFooterClass="mb-4"
            Dense="true"
            @ref="_tableRef">
        <ColGroup>
            <col style="width: 60px;" />
            <col />
            <col />
        </ColGroup>
        <HeaderContent>
            <MudTh>Id</MudTh>
            <MudTh>Date Paid</MudTh>
            <MudTh>Amount Paid</MudTh>
        </HeaderContent>
        <GroupHeaderTemplate>
            <MudTh Class="mud-table-cell-custom-group" colspan="5">@($"{context?.GroupName}: {context?.Key}") </MudTh>
        </GroupHeaderTemplate>
        <RowTemplate>
            <MudTd DataLabel="Id">@context?.Id</MudTd>
            <MudTd DataLabel="Date Paid">@context?.DatePaid</MudTd>
            <MudTd DataLabel="Amount">@context?.AmountPaid</MudTd>
        </RowTemplate>
            <NoRecordsContent>
        <MudText>No contributions made yet</MudText>
        </NoRecordsContent>
        <LoadingContent>
            <MudText>Loading...</MudText>
        </LoadingContent>
        <GroupFooterTemplate>
            <MudTh Class="mud-table-cell-custom-group mud-table-cell-custom-group-footer" colspan="5">Total Contributed: @context.Items.Sum((e) => e.AmountPaid)</MudTh>
        </GroupFooterTemplate>
    </MudTable>

    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mt-3" OnClick="@((args) => _tableRef?.ExpandAllGroups())">Expand</MudButton>
    <MudButton Variant="Variant.Filled" Color="Color.Secondary" Class="mt-3 ml-3" OnClick="@((args) => _tableRef?.CollapseAllGroups())">Collapse</MudButton>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
    </DialogActions>
</MudDialog> 

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } 
    [Parameter] public string ButtonText { get; set; } = null!;
    [Parameter] public string Identifier { get; set; } = null!;
    [Parameter] public string Contributor { get; set; } = null!;
    [Parameter] public Color Color { get; set; }
    RHF.Shared.BenefactorContribution model = new RHF.Shared.BenefactorContribution();
    private MudTable<Shared.BenefactorContribution> _tableRef;

    private TableGroupDefinition<Shared.BenefactorContribution> _groupDefinition = new()
    {
        GroupName = "Year",
        Indentation = false,
        Expandable = true,
        IsInitiallyExpanded = false,
        Selector = (e) => e.DatePaid.Year
    };

    private IEnumerable<RHF.Shared.BenefactorContribution> Contributions = 
            new List<RHF.Shared.BenefactorContribution>();
                
    private IList<IGrouping<int, RHF.Shared.BenefactorContribution>>? grouped_contributions = 
            new List<IGrouping<int, RHF.Shared.BenefactorContribution>>();

    protected override async Task OnInitializedAsync()
    {
        Contributions= await Http.GetFromJsonAsync<IList<RHF.Shared.BenefactorContribution>>($"api/BenefactorContributions/{Identifier}"); 
             
        if(Contributions != null){
            grouped_contributions = Contributions
                .GroupBy(item=> item.DatePaid.Year)
                .ToList();
        }
    }
    void Cancel() => MudDialog.Cancel();
}